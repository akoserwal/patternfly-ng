{"version":3,"file":"application-launcher.component.js","sourceRoot":"","sources":["../../../build/src/app/navigation/application-launcher.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACH,SAAS,EACT,KAAK,EACQ,iBAAiB,EACjC,MAAM,eAAe,CAAC;AAWvB;IAsCI;;OAEG;IACH;IAAe,CAAC;IAEhB;;OAEG;IACH,+CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED;;OAEG;IACG,6CAAM,GAAb;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACnC,CAAC;IAEH,CAAC;IAvDQ;QAAR,KAAK,EAAE;;+DAAe;IAMd;QAAR,KAAK,EAAE;;oEAAqB;IAMpB;QAAR,KAAK,EAAE;;gEAAiB;IAMhB;QAAR,KAAK,EAAE;;qEAAsB;IAMrB;QAAR,KAAK,EAAE;;+DAA+B;IA7B9B,4BAA4B;QANxC,SAAS,CAAC;YACP,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,0nCAAgkC;SAC7kC,CAAC;;OAEW,4BAA4B,CA+DxC;IAAD,mCAAC;CAAA,AA/DD,IA+DC;SA/DY,4BAA4B","sourcesContent":["import {\n    Component, ElementRef, EventEmitter,\n    Input, OnInit, Output, Renderer2,\n    TemplateRef, ViewEncapsulation\n} from '@angular/core';\n\nimport { NavigationItemConfig } from './navigation-item-config';\nimport { read } from 'fs-extra';\n\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    selector: 'pfng-application-launcher',\n    template: `<div><div class=\"applauncher-pf dropdown dropdown-kebab-pf\" [ngClass]=\"{'applauncher-pf-block-list': !isList, 'open':isClicked}\" uib-dropdown uib-keyboard-nav=\"true\"><a id=\"domain-switcher\" class=\"dropdown-toggle drawer-pf-trigger-icon\" uib-dropdown-toggle (click)=\"toggle()\" [ngClass]=\"{'disabled': isDisabled}\"><i class=\"fa fa-th applauncher-pf-icon\" aria-hidden=\"true\"></i> <span class=\"applauncher-pf-title\">{{label || 'Application Launcher'}} <span class=\"caret\" aria-hidden=\"true\"></span></span></a><ul class=\"dropdown-menu dropdown-menu-right\" uib-dropdown-menu role=\"menu\" aria-labelledby=\"domain-switcher\"><li class=\"applauncher-pf-item\" role=\"menuitem\" *ngFor=\"let item of items\"><a class=\"applauncher-pf-link\" href=\"{{item.url}}\" target=\"{{item.target || '_blank'}}\" *ngFor=\"let badge of item.badges\" title=\"{{badge.tooltip}}\"><i class=\"applauncher-pf-link-icon pficon\" class=\"{{item.iconStyleClass}}\" *ngIf=\"item.iconStyleClass\" [ngClass]=\"{hidden: hiddenIcons}\" aria-hidden=\"true\"></i> <span class=\"applauncher-pf-link-title\">{{item.title}}</span></a></li></ul></div></div>`\n})\n\nexport class ApplicationLauncherComponent  implements OnInit {\n\n    /**\n     *  Use a custom label for the launcher, default: Application Launcher\n     */\n    @Input() label: string;\n\n\n    /**\n     * Disable the application launcher button, default: false\n     */\n    @Input() isDisabled: boolean;\n\n\n    /**\n     * Display items as a list instead of a grid, default: false\n     */\n    @Input() isList: boolean;\n\n\n    /**\n     * Flag to not show icons on the launcher, default: false\n     */\n    @Input() hiddenIcons: boolean;\n\n\n    /**\n     * The navigation items used to build the menu\n     */\n    @Input() items: NavigationItemConfig[];\n\n\n    /**\n     * Internal boolean to toggle launcher, default:false\n     */\n    public isClicked: boolean;\n\n\n    /**\n     * The default constructor\n     */\n    constructor() {}\n\n    /**\n     * Initialize variable\n     */\n    ngOnInit(): void {\n      this.isClicked = false;\n    }\n\n    /**\n     * toggle function for launcher, active when click, return false on isDisabled:true\n     */\n   public toggle() {\n      if (this.isDisabled) {\n        return false;\n      } else {\n        this.isClicked = !this.isClicked;\n      }\n\n    }\n\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}